import { AnswerMessage } from '../types';
import { NICKNAMES } from '../constants';
import { hasInLine } from '../../utils';

export const bmwMessage: AnswerMessage = async (ctx) => {
  if (!ctx.text) return false;

  if (ctx.text.indexOf('bmv') >= 0) {
    await ctx.reply(`–¢—ã —á–µ —Å*–∫–∞!${ctx.from?.username ? ` @${ctx.from.username}` : ''}`);
    return true;
  }

  if (ctx.text.indexOf('bmw') >= 0) {
    await ctx.reply(`BMW –Ω–µ –¥–æ—Å—Ç–æ–∏–Ω —Ç–∞–∫–∏—Ö –º–µ–ª–∫–∏—Ö –±—É–∫–≤. ${NICKNAMES.alexander} –∏–¥–∏ —Ä–∞–∑–±–µ—Ä–∏—Å—å!`);
    return true;
  }

  if (ctx.text.indexOf('–±–º–≤') >= 0) {
    await ctx.reply(`–ü—Ä–∏–≤–∏–ª—å–Ω–æ BMW –±–ª—è—Ç—å. ${NICKNAMES.alexander} –∏–¥–∏ —Ä–∞–∑–±–µ—Ä–∏—Å—å!`);
    return true;
  }

  if (hasInLine(ctx.text, ['–±—ç—Ö–∞', '–±–µ—Ö–∞', 'BMW'])) {
    await ctx.react('üëç');
    return true;
  }

  return false;
};
